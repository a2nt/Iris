@import "mocha";

/**
 * Our colour map
 **/
$colours: (
  "turquoise": $mauve,
  "off_white": $rosewater,
  "faint_grey": $subtext0,
  "light_grey": $subtext1,
  "mid_grey": $base,
  "middle_grey": opacify($overlay0, 0.5),
  "soft_grey": $surface1,
  "grey": $surface2,
  "dark_grey": $mantle,
  "darkest_grey": $crust,
  "secondary_grey": $overlay0,
  "white": $text,
  "black": $crust,
  "red": $red,
  "green": $green,
  "blue": $sapphire,
  "light_blue": $blue,
  "yellow": $yellow,
  "orange": $peach,
  "overlay_dark": opacify($base, 0.22),
  "overlay_light": opacify($subtext0, 0.3),
);

/**
 * Create the variation classes
 * This includes -text, -border and -background
 **/
@each $class, $colour in $colours {
  .#{$class}-text {
    color: $colour !important;
  }

  .#{$class}-border {
    border-color: $colour !important;
  }

  .#{$class}-background {
    background-color: $colour !important;
  }
}

.opaque-text {
  opacity: 0.35;
}

/**
 * Retrieve colour from $colours map
 * @param  {string} $key [name of colour, as defined in $colours map]
 * @return hex colour
 */
@function colour($key) {
  @if map-has-key($colours, $key) {
    @return map-get($colours, $key);
  }

  @warn "Unknown `#{$key}` in $colours.";
  @return null;
}

@mixin invert() {
  -webkit-filter: invert(1);
  filter: invert(1);
}

@mixin gradient_overlay($radius: 0, $opacity: 0) {
  position: relative;
  border-radius: $radius;

  &:before {
    @include animate();
    border-radius: $radius;
    content: "";
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    opacity: $opacity;
    z-index: 9;
    pointer-events: none;
    background: -webkit-linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0.75),
      rgba(0, 0, 0, 1)
    );
    background: -moz-linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0.75),
      rgba(0, 0, 0, 1)
    );
    background: -o-linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0.75),
      rgba(0, 0, 0, 1)
    );
    background: linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0.75),
      rgba(0, 0, 0, 1)
    );
  }
}
